@startuml classDiagram
class Board {
    -cells:[][]
    +initializeBoard(): void
    +resetBoard(): void
    +getCell(row: int, column: int): Cell
    +setCell(piece: Piece, row: int, column: int): void
}
                                      
class Game {
    -whitePlayer: player
    -blackPlayer: player   
    -board: Board
    -isWhiteTurn: boolean 
    -isEndGame: boolean
    -listMoved: Cell[]                             
                               
    +makeMove(player: Player, startCell: Cell, endCell: Cell): void
    +switchTurn(): void
    +isCheckMate(): boolean
    +checkStealMate(): boolean
    +checkDraw(): boolean
    +checkEndGame(): boolean
}

class Cell {
    -piece: Piece
    -columnOfCell: int 
    -rowOfCell: int

    +Cell(piece: Piece, rowOfCell: int, columnOfCell: int)
    +getPiece(): Piece
    +setPiece(piece: Piece): void
    +isOccupied(): boolean
    +getRowOfCell(): int
    +getColumnOfCell() : int
}

class Player {
    -name: String
    -isWhiteSide: Boolean
    
    +Player(name: String, isWhiteSide: Boolean)
    +inviteGame(): void
    +joinGame(): void
    +createRoom(): void
    +startGame(): void
    +resign(): void
    +makeDraw(): void
    +sendMessage(message: String): void
}

abstract class PieceBase {
    -isWhitePiece: boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[]  
}

class Pawn {
    -isWhitePiece: Boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[] 
} 

class Rook {
    -isWhitePiece: Boolean
    -isCastelingMove: boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[] 
}
class Knight {
    -isWhitePiece: Boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[] 
}
class Bishop {
    -isWhitePiece: Boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[] 
}
class Queen {
    -isWhitePiece: Boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[] 
}
class King {
    -isWhitePiece: Boolean
    -isCastelingMove: boolean
    +findValidMove(currentCell: Cell, board: Board): Cell[]  
}

Player --> Game

Cell --> Board
Board --> Game

PieceBase <|-up- Pawn 
PieceBase <|-up- Rook
PieceBase <|-up- Knight
PieceBase <|-up- Bishop
PieceBase <|-up- Queen
PieceBase <|-up- King

Cell <-- Pawn
Cell <-- Rook
Cell <-- Knight
Cell <-- Bishop
Cell <-- Queen
Cell <-- King
@enduml