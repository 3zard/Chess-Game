@startuml classDiagram
class Board {
    cell
    resetBoard()
    getCell()
    setCell()
}
class Game {
    player
    board
    currentTurn
    endGame
    listMoved
    makeMove()
    switchTurn()
    isCheck()
    isCheckMate()
    isStealMate()
    isDraw()
    isEndGame()
}

class Cell {
    -piece: Piece
    -column: String 
    -row: int

    +Cell(piece: Piece, row: int, column: String)
    +getPiece(): Piece
    +setPiece(piece: Piece): void
    +isOccupied(): boolean
    +getRow(): int
    +getColumn() : String
}

abstract class PlayerBase {
    -name: String
    -whiteSide: Boolean
    -game: Game
    
    +PlayerBase(name: String, whiteSide: Boolean)
    +isWhiteSide(): Boolean
    +joinGame(game: Game): void
    +createRoom(): Game
    +startGame(): void
    +resign(): void
    +makeDraw(): void
    +sendMessage(message: String): void
}

abstract class PieceBase {
    -name: String
    -whitePiece: boolean

    +findValidMove(cell: Cell): void
    +isWhitePiece(): Boolean
}

class Move {
    -playerMakeMove : Player
    -startCell : Cell 
    -endCell : Cell

    +isValidMove(): Boolean
}

class Pawn{
    -name: String
    -whitePiece: Boolean
    +findValidMove(cell: Cell): void
    +isWhitePiece(): boolean
} 
class Rook{
    -name: String
    -whitePiece: Boolean
    +findValidMove(cell: Cell): void
    +isWhitePiece(): boolean
}
class Knight{
    -name: String
    -whitePiece: Boolean
    +findValidMove(cell: Cell): void
    +isWhitePiece(): boolean
}
class Bishop{
    -name: String
    -whitePiece: Boolean
    +findValidMove(cell: Cell): void
    +isWhitePiece(): boolean
}
class Queen{
    -name: String
    -whitePiece: Boolean
    +findValidMove(cell: Cell): void
    +isWhitePiece(): boolean
}
class King{
    -name: String
    -whitePiece: Boolean
    +findValidMove(cell: Cell): void
    +isWhitePiece(): boolean
}

PlayerBase --> Game
Cell --> Board
Cell -->PieceBase
Board --> Game
Game --> Move
PieceBase <|-- Pawn
PieceBase <|-- Rook
PieceBase <|-- Knight
PieceBase <|-- Bishop
PieceBase <|-- Queen
PieceBase <|-- King
@enduml


